from turtle import color
import matplotlib.pyplot as plt
import sys
import obtained_support_values

def truncate(n, decimals=0):
    multiplier = 10 ** decimals
    return int(n * multiplier) / multiplier

def main():

    x_coordinates = [31.17048885,31.16829287,31.19469238,31.19038859,31.19241193,31.1649906,31.12553839,31.18805384,31.1889473,31.17895309,31.17511108,31.17469473,31.13758912,31.13888922,31.19846473,31.19615898,31.1432187,31.18028864,31.16902902,31.19822319,31.13309042,31.15829318,31.20975503,31.16520936,31.13592127,31.17623857,31.18517511,31.13382319,31.20508651,31.14958375,31.19269619,31.14977024,31.20211095,31.21719182,31.11415709,31.17262792,31.12127771,31.17091456,31.15604781,31.14080993,31.20352711,31.16526286,31.15729531,31.18503813,31.14171855,31.14892263,31.21400774,31.17842445,31.19553266,31.15625049,31.18474536]
    y_coordinates = [121.4334182,121.4338576,121.435514,121.4515255,121.425244,121.428579,121.4433409,121.4333151,121.4400466,121.4520675,121.4145502,121.4328475,121.4464446,121.4215714,121.4254649,121.4554855,121.4388622,121.4083481,121.4527306,121.4617967,121.426142,121.4172946,121.4526576,121.4042162,121.4357332,121.422342,121.4200715,121.4171853,121.4365349,121.4289233,121.4153853,121.4187478,121.4478084,121.4516568,121.4492138,121.3952804,121.455214,121.4442217,121.40979,121.4298794,121.457763,121.422182,121.4404778,121.4275598,121.4136145,121.4099423,121.4416347,121.4393858,121.4434244,121.4497066,121.4453275]



    global n
    n = 17
    global xc
    xc = x_coordinates
    global yc
    yc = y_coordinates
    global N
    N = [i for i in range(1, n+1)]
    print(N)
    global V
    V = [0] + N
    print(V)
    global A
    A = [(i, j) for i in V for j in V if i != j]
    #active_arcs = [a for a in A if arcs[a] > 0]
    
    print("x_coordinates: ", x_coordinates)
    print("y_coordinates: ", y_coordinates)
    active_arcs = []
    somedict = {(0, 1): 1.0, (0, 2): 0.0, (0, 3): 0.0, (0, 4): 0.0, (0, 5): 0.0, (0, 6): 1.0, (0, 7): 0.0, (0, 8): 0.0, (0, 9): 0.0, (0, 10): 0.0, (0, 11): 1.0, (0, 12): 0.0, (0, 13): 0.0, (0, 14): 0.0, (0, 15): 0.0, (0, 16): 0.0, (0, 17): 0.0, (0, 18): 0.0, (0, 19): 0.0, (0, 20): 0.0, (1, 0): 0.0, (1, 2): 0.0, (1, 3): 0.0, (1, 4): 0.0, (1, 5): 1.0, (1, 6): 0.0, (1, 7): 0.0, (1, 8): 0.0, (1, 9): 0.0, (1, 10): 0.0, (1, 11): 0.0, (1, 12): 0.0, (1, 13): 0.0, (1, 14): 0.0, (1, 15): 0.0, (1, 16): 0.0, (1, 17): 0.0, (1, 18): 0.0, (1, 19): 0.0, (1, 20): 0.0, (2, 0): 0.0, (2, 1): 0.0, (2, 3): 0.0, (2, 4): 1.0, (2, 5): 0.0, (2, 6): 0.0, (2, 7): 0.0, (2, 8): 0.0, (2, 9): 0.0, (2, 10): 0.0, (2, 11): 0.0, (2, 12): 0.0, (2, 13): 0.0, (2, 14): 0.0, (2, 15): 0.0, (2, 16): 0.0, (2, 17): 0.0, (2, 18): 0.0, (2, 19): 0.0, (2, 20): 0.0, (3, 0): 0.0, (3, 1): 0.0, (3, 2): 0.0, (3, 4): 0.0, (3, 5): 0.0, (3, 6): 0.0, (3, 7): 0.0, (3, 8): 1.0, (3, 9): 0.0, (3, 10): 0.0, (3, 11): 0.0, (3, 12): 0.0, (3, 13): 0.0, (3, 14): 0.0, (3, 15): 0.0, (3, 16): 0.0, (3, 17): 0.0, (3, 18): 0.0, (3, 19): 0.0, (3, 20): 0.0, (4, 0): 0.0, (4, 1): 0.0, (4, 2): 0.0, (4, 3): 0.0, (4, 5): 0.0, (4, 6): 0.0, (4, 7): 1.0, (4, 8): 0.0, (4, 9): 0.0, (4, 10): 0.0, (4, 11): 0.0, (4, 12): 0.0, (4, 13): 0.0, (4, 14): 0.0, (4, 15): 0.0, (4, 16): 0.0, (4, 17): 0.0, (4, 18): 0.0, (4, 19): 0.0, (4, 20): 0.0, (5, 0): 0.0, (5, 1): 0.0, (5, 2): 0.0, (5, 3): 0.0, (5, 4): 0.0, (5, 6): 0.0, (5, 7): 0.0, (5, 8): 0.0, (5, 9): 0.0, (5, 10): 1.0, (5, 11): 0.0, (5, 12): 0.0, (5, 13): 0.0, (5, 14): 0.0, (5, 15): 0.0, (5, 16): 0.0, (5, 17): 0.0, (5, 18): 0.0, (5, 19): 0.0, (5, 20): 0.0, (6, 0): 0.0, (6, 1): 0.0, (6, 2): 0.0, (6, 3): 0.0, (6, 4): 0.0, (6, 5): 0.0, (6, 7): 0.0, (6, 8): 0.0, (6, 9): 0.0, (6, 10): 0.0, (6, 11): 0.0, (6, 12): 1.0, (6, 13): 0.0, (6, 14): 0.0, (6, 15): 0.0, (6, 16): 0.0, (6, 17): 0.0, (6, 18): 0.0, (6, 19): 0.0, (6, 20): 0.0, (7, 0): 0.0, (7, 1): 0.0, (7, 2): 0.0, (7, 3): 0.0, (7, 4): 0.0, (7, 5): 0.0, (7, 6): 0.0, (7, 8): 0.0, (7, 9): 1.0, (7, 10): 0.0, (7, 11): 0.0, (7, 12): 0.0, (7, 13): 0.0, (7, 14): 0.0, (7, 15): 0.0, (7, 16): 0.0, (7, 17): 0.0, (7, 18): 0.0, (7, 19): 0.0, (7, 20): 0.0, (8, 0): 0.0, (8, 1): 0.0, (8, 2): 0.0, (8, 3): 0.0, (8, 4): 0.0, (8, 5): 0.0, (8, 6): 0.0, (8, 7): 0.0, (8, 9): 0.0, (8, 10): 0.0, (8, 11): 0.0, (8, 12): 0.0, (8, 13): 0.0, (8, 14): 0.0, (8, 15): 1.0, (8, 16): 0.0, (8, 17): 0.0, (8, 18): 0.0, (8, 19): 0.0, (8, 20): 0.0, (9, 0): 0.0, (9, 1): 0.0, (9, 2): 0.0, (9, 3): 0.0, (9, 4): 0.0, (9, 5): 0.0, (9, 6): 0.0, (9, 7): 0.0, (9, 8): 0.0, (9, 10): 0.0, (9, 11): 0.0, (9, 12): 0.0, (9, 13): 0.0, (9, 14): 0.0, (9, 15): 0.0, (9, 16): 0.0, (9, 17): 0.0, (9, 18): 1.0, (9, 19): 0.0, (9, 20): 0.0, (10, 0): 0.0, (10, 1): 0.0, (10, 2): 0.0, (10, 3): 0.0, (10, 4): 0.0, (10, 5): 0.0, (10, 6): 0.0, (10, 7): 0.0, (10, 8): 0.0, (10, 9): 0.0, (10, 11): 0.0, (10, 12): 0.0, (10, 13): 0.0, (10, 14): 0.0, (10, 15): 0.0, (10, 16): 0.0, (10, 17): 1.0, (10, 18): 0.0, (10, 19): 0.0, (10, 20): 0.0, (11, 0): 0.0, (11, 1): 0.0, (11, 2): 0.0, (11, 3): 0.0, (11, 4): 0.0, (11, 5): 0.0, (11, 6): 0.0, (11, 7): 0.0, (11, 8): 0.0, (11, 9): 0.0, (11, 10): 0.0, (11, 12): 0.0, (11, 13): 0.0, (11, 14): 1.0, (11, 15): 0.0, (11, 16): 0.0, (11, 17): 0.0, (11, 18): 0.0, (11, 19): 0.0, (11, 20): 0.0, (12, 0): 0.0, (12, 1): 0.0, (12, 2): 0.0, (12, 3): 0.0, (12, 4): 0.0, (12, 5): 0.0, (12, 6): 0.0, (12, 7): 0.0, (12, 8): 0.0, (12, 9): 0.0, (12, 10): 0.0, (12, 11): 0.0, (12, 13): 1.0, (12, 14): 0.0, (12, 15): 0.0, (12, 16): 0.0, (12, 17): 0.0, (12, 18): 0.0, (12, 19): 0.0, (12, 20): 0.0, (13, 0): 0.0, (13, 1): 0.0, (13, 2): 0.0, (13, 3): 1.0, (13, 4): 0.0, (13, 5): 0.0, (13, 6): 0.0, (13, 7): 0.0, (13, 8): 0.0, (13, 9): 0.0, (13, 10): 0.0, (13, 11): 0.0, (13, 12): 0.0, (13, 14): 0.0, (13, 15): 0.0, (13, 16): 0.0, (13, 17): 0.0, (13, 18): 0.0, (13, 19): 0.0, (13, 20): 0.0, (14, 0): 0.0, (14, 1): 0.0, (14, 2): 1.0, (14, 3): 0.0, (14, 4): 0.0, (14, 5): 0.0, (14, 6): 0.0, (14, 7): 0.0, (14, 8): 0.0, (14, 9): 0.0, (14, 10): 0.0, (14, 11): 0.0, (14, 12): 0.0, (14, 13): 0.0, (14, 15): 0.0, (14, 16): 0.0, (14, 17): 0.0, (14, 18): 0.0, (14, 19): 0.0, (14, 20): 0.0, (15, 0): 0.0, (15, 1): 0.0, (15, 2): 0.0, (15, 3): 0.0, (15, 4): 0.0, (15, 5): 0.0, (15, 6): 0.0, (15, 7): 0.0, (15, 8): 0.0, (15, 9): 0.0, (15, 10): 0.0, (15, 11): 0.0, (15, 12): 0.0, (15, 13): 0.0, (15, 14): 0.0, (15, 16): 0.0, (15, 17): 0.0, (15, 18): 0.0, (15, 19): 1.0, (15, 20): 0.0, (16, 0): 0.0, (16, 1): 0.0, (16, 2): 0.0, (16, 3): 0.0, (16, 4): 0.0, (16, 5): 0.0, (16, 6): 0.0, (16, 7): 0.0, (16, 8): 0.0, (16, 9): 0.0, (16, 10): 0.0, (16, 11): 0.0, (16, 12): 0.0, (16, 13): 0.0, (16, 14): 0.0, (16, 15): 0.0, (16, 17): 0.0, (16, 18): 0.0, (16, 19): 0.0, (16, 20): 1.0, (17, 0): 0.0, (17, 1): 0.0, (17, 2): 0.0, (17, 3): 0.0, (17, 4): 0.0, (17, 5): 0.0, (17, 6): 0.0, (17, 7): 0.0, (17, 8): 0.0, (17, 9): 0.0, (17, 10): 0.0, (17, 11): 0.0, (17, 12): 0.0, (17, 13): 0.0, (17, 14): 0.0, (17, 15): 0.0, (17, 16): 1.0, (17, 18): 0.0, (17, 19): 0.0, (17, 20): 0.0, (18, 0): 1.0, (18, 1): 0.0, (18, 2): 0.0, (18, 3): 0.0, (18, 4): 0.0, (18, 5): 0.0, (18, 6): 0.0, (18, 7): 0.0, (18, 8): 0.0, (18, 9): 0.0, (18, 10): 0.0, (18, 11): 0.0, (18, 12): 0.0, (18, 13): 0.0, (18, 14): 0.0, (18, 15): 0.0, (18, 16): 0.0, (18, 17): 0.0, (18, 19): 0.0, (18, 20): 0.0, (19, 0): 1.0, (19, 1): 0.0, (19, 2): 0.0, (19, 3): 0.0, (19, 4): 0.0, (19, 5): 0.0, (19, 6): 0.0, (19, 7): 0.0, (19, 8): 0.0, (19, 9): 0.0, (19, 10): 0.0, (19, 11): 0.0, (19, 12): 0.0, (19, 13): 0.0, (19, 14): 0.0, (19, 15): 0.0, (19, 16): 0.0, (19, 17): 0.0, (19, 18): 0.0, (19, 20): 0.0, (20, 0): 1.0, (20, 1): 0.0, (20, 2): 0.0, (20, 3): 0.0, (20, 4): 0.0, (20, 5): 0.0, (20, 6): 0.0, (20, 7): 0.0, (20, 8): 0.0, (20, 9): 0.0, (20, 10): 0.0, (20, 11): 0.0, (20, 12): 0.0, (20, 13): 0.0, (20, 14): 0.0, (20, 15): 0.0, (20, 16): 0.0, (20, 17): 0.0, (20, 18): 0.0, (20, 19): 0.0}
    for ele in A:
        if somedict[ele]:
            active_arcs.append(ele)
    #active_arcs = [[0, 2], [2, 8], [8, 15], [15, 3], [3, 9], [9, 12], [12, 6], [6, 0],[0, 1], [1, 16], [16, 13], [13, 5], [5, 10], [10, 17], [17, 0],[0, 4], [11, 7], [14, 11], [4, 14], [7, 0]]
    print(active_arcs)
    plt.rcParams["figure.figsize"] = (60,40)

    fig = plt.figure()
    ax = fig.add_subplot()
    title_of_figure = "JD Dataset with " + str(n) + " customers"
    ax.set_title(title_of_figure)
    for i, j in active_arcs:
        ax.plot([xc[i], xc[j]], [yc[i], yc[j]], c='g', zorder=0)
    ax.text(31.195,121.40,"objective_value = " + str(truncate(1.8089191002951333, 3)))
    for i in N:
        ax.text(xc[i],yc[i],str(i))
    ax.plot(xc[0], yc[0], c='r', marker='s')
    ax.scatter(xc[1:], yc[1:], c='b')
    ax.set_xlabel('latitude')
    ax.set_ylabel('longitude')

    plt.show()

    #for i, j in active_arcs:
""" sometuple = (i,j)
        #if arcs[sometuple] < 0.001:
        #    plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#42f581', zorder=0 , alpha=0.1)
        #if arcs[sometuple] >= 0.001 and arcs[sometuple] < 0.01:
        #    plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#42f581', zorder=0 , alpha=0.15)
        if arcs[sometuple] >= 0.000000000001 and arcs[sometuple] < 0.001:
            plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#4287f5', zorder=0 , alpha=0.01)
        if arcs[sometuple] >= 0.001 and arcs[sometuple] < 0.005:
            plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#4287f5', zorder=0 , alpha=0.05)
        if arcs[sometuple] >= 0.005 and arcs[sometuple] < 0.01:
            plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#4287f5', zorder=0 , alpha=0.2)
        if arcs[sometuple] >= 0.01 and arcs[sometuple] < 0.05:
            plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#4287f5', zorder=0 , alpha=0.3)
        if arcs[sometuple] >= 0.05 and arcs[sometuple] < 0.1:
            plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#4287f5', zorder=0 , alpha=0.4)
        if arcs[sometuple] >= 0.1 and arcs[sometuple] < 0.2:
            plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#4287f5', zorder=0 , alpha=0.5)
        if arcs[sometuple] >= 0.2 and arcs[sometuple] < 0.3:
            plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#4287f5', zorder=0 , alpha=0.9)
        if arcs[sometuple] >= 0.3:
            plt.plot([xc[i], xc[j]], [yc[i], yc[j]], color='#4287f5', zorder=0 , alpha=1) """
        
    #plt.plot(xc[0], yc[0], c='r', marker='s')
    #plt.scatter(xc[1:], yc[1:], c='b')

    #plt.show()

    #plt.savefig("Support_Values_Visualized.png")

if __name__ == "__main__":
    main()